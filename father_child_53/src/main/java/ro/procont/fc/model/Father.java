package ro.procont.fc.model;

// Generated Apr 10, 2015 4:10:43 PM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import java.lang.Override;

/**
 * Father generated by hbm2java
 */
@Entity
@Table(name = "father"
      , catalog = "father_child_5")
public class Father implements java.io.Serializable
{

   private Integer id;
   private String name1;
   private String name2;
   private Boolean isTrue1;
   private Double value1;
   private String textContent1;
   private List<Child> childs = new ArrayList<Child>();

   public Father()
   {
   }

   public Father(String name1, String name2)
   {
      this.name1 = name1;
      this.name2 = name2;
   }

   public Father(String name1, String name2, Boolean isTrue1, Double value1, String textContent1, List<Child> childs)
   {
      this.name1 = name1;
      this.name2 = name2;
      this.isTrue1 = isTrue1;
      this.value1 = value1;
      this.textContent1 = textContent1;
      this.childs = childs;
   }

   @Id
   @GeneratedValue(strategy = IDENTITY)
   @Column(name = "ID", unique = true, nullable = false)
   public Integer getId()
   {
      return this.id;
   }

   public void setId(Integer id)
   {
      this.id = id;
   }

   @Column(name = "NAME1", nullable = false, length = 100)
   public String getName1()
   {
      return this.name1;
   }

   public void setName1(String name1)
   {
      this.name1 = name1;
   }

   @Column(name = "NAME2", nullable = false, length = 100)
   public String getName2()
   {
      return this.name2;
   }

   public void setName2(String name2)
   {
      this.name2 = name2;
   }

   @Column(name = "IS_TRUE1")
   public Boolean getIsTrue1()
   {
      return this.isTrue1;
   }

   public void setIsTrue1(Boolean isTrue1)
   {
      this.isTrue1 = isTrue1;
   }

   @Column(name = "VALUE1", precision = 22, scale = 0)
   public Double getValue1()
   {
      return this.value1;
   }

   public void setValue1(Double value1)
   {
      this.value1 = value1;
   }

   @Column(name = "TEXT_CONTENT1", length = 16777215)
   public String getTextContent1()
   {
      return this.textContent1;
   }

   public void setTextContent1(String textContent1)
   {
      this.textContent1 = textContent1;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "father", cascade={CascadeType.MERGE},orphanRemoval=true)
   public List<Child> getChilds()
   {
      return this.childs;
   }

   public void setChilds(List<Child> childs)
   {
      this.childs = childs;
   }

   @Override
   public int hashCode()
   {
      final int prime = 31;
      int result = 1;
      result = prime * result + ((id == null) ? 0 : id.hashCode());
      return result;
   }

   @Override
   public boolean equals(Object obj)
   {
      if (this == obj)
      {
         return true;
      }
      if (!(obj instanceof Father))
      {
         return false;
      }
      Father other = (Father) obj;
      if (id != null)
      {
         if (!id.equals(other.id))
         {
            return false;
         }
      }
      return true;
   }

}
