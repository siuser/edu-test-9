package ro.procont.fc.model;

// Generated Apr 10, 2015 4:10:43 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import java.lang.Override;
import javax.persistence.Transient;
/**
 * Mother generated by hbm2java
 */
@Entity
@Table(name = "mother"
      , catalog = "father_child_5")
public class Mother implements java.io.Serializable
{

   private Integer id;
   private String name;
   private Set<Child> childs = new HashSet<Child>(0);
   

   public Mother()
   {
   }

   public Mother(String name)
   {
      this.name = name;
   }

   public Mother(String name, Set<Child> childs)
   {
      this.name = name;
      this.childs = childs;
   }

   @Id
   @GeneratedValue(strategy = IDENTITY)
   @Column(name = "ID", unique = true, nullable = false)
   public Integer getId()
   {
      return this.id;
   }

   public void setId(Integer id)
   {
      this.id = id;
   }

   @Column(name = "NAME", nullable = false, length = 100)
   public String getName()
   {
      return this.name;
   }

   public void setName(String name)
   {
      this.name = name;
   }

   @OneToMany(fetch = FetchType.LAZY, mappedBy = "mother")
   public Set<Child> getChilds()
   {
      return this.childs;
   }

   public void setChilds(Set<Child> childs)
   {
      this.childs = childs;
   }

   @Override
   public int hashCode()
   {
      final int prime = 31;
      int result = 1;
      result = prime * result + ((id == null) ? 0 : id.hashCode());
      return result;
   }

   @Override
   public boolean equals(Object obj)
   {
      if (this == obj)
      {
         return true;
      }
      if (!(obj instanceof Mother))
      {
         return false;
      }
      Mother other = (Mother) obj;
      if (id != null)
      {
         if (!id.equals(other.id))
         {
            return false;
         }
      }
      return true;
   }
   
   private Set<Child>   addedChilds = new HashSet<Child>(0);
   
   @Transient 
   public Set<Child> getAddedChilds()
   {
      return this.addedChilds;
   }

   public void setAddedChilds(Set<Child> addedChilds)
   {
      this.addedChilds = addedChilds;
   }

}
